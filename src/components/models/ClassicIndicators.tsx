/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from "@react-three/drei";
import { Mesh } from "three";

interface ClassicIndicatorsProps {
  [key: string]: any;
}

export function ClassicIndicators(props: ClassicIndicatorsProps) {
  const { nodes, materials } = useGLTF(
    "/models/OrientWatchClassicIndicators.glb"
  );
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={(nodes.IndicatorClassic012 as Mesh).geometry}
        material={materials.Letters}
        position={[0.008, 0.022, -0.76]}
        scale={[0.053, 0.058, 0.058]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={(nodes.IndicatorClassic011 as Mesh).geometry}
        material={materials.Letters}
        position={[-0.35, 0.022, -0.665]}
        rotation={[0, Math.PI / 6, 0]}
        scale={[0.053, 0.058, 0.058]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={(nodes.IndicatorClassic010 as Mesh).geometry}
        material={materials.Letters}
        position={[-0.61, 0.022, -0.406]}
        rotation={[0, Math.PI / 3, 0]}
        scale={[0.053, 0.058, 0.058]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={(nodes.IndicatorClassic009 as Mesh).geometry}
        material={materials.Letters}
        position={[-0.706, 0.022, -0.051]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.053, 0.058, 0.058]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={(nodes.IndicatorClassic008 as Mesh).geometry}
        material={materials.Letters}
        position={[-0.611, 0.022, 0.304]}
        rotation={[-Math.PI, Math.PI / 3, -Math.PI]}
        scale={[0.053, 0.058, 0.058]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={(nodes.IndicatorClassic007 as Mesh).geometry}
        material={materials.Letters}
        position={[-0.352, 0.022, 0.564]}
        rotation={[-Math.PI, Math.PI / 6, -Math.PI]}
        scale={[0.053, 0.058, 0.058]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={(nodes.IndicatorClassic006 as Mesh).geometry}
        material={materials.Letters}
        position={[0.003, 0.022, 0.66]}
        rotation={[Math.PI, 0, Math.PI]}
        scale={[0.053, 0.058, 0.058]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={(nodes.IndicatorClassic005 as Mesh).geometry}
        material={materials.Letters}
        position={[0.358, 0.022, 0.565]}
        rotation={[Math.PI, -Math.PI / 6, Math.PI]}
        scale={[0.053, 0.058, 0.058]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={(nodes.IndicatorClassic004 as Mesh).geometry}
        material={materials.Letters}
        position={[0.618, 0.022, 0.306]}
        rotation={[Math.PI, -Math.PI / 3, Math.PI]}
        scale={[0.053, 0.058, 0.058]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={(nodes.IndicatorClassic003 as Mesh).geometry}
        material={materials.Letters}
        position={[0.714, 0.022, -0.049]}
        rotation={[0, -Math.PI / 2, 0]}
        scale={[0.053, 0.058, 0.058]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={(nodes.IndicatorClassic002 as Mesh).geometry}
        material={materials.Letters}
        position={[0.619, 0.022, -0.404]}
        rotation={[0, -Math.PI / 3, 0]}
        scale={[0.053, 0.058, 0.058]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={(nodes.IndicatorClassic001 as Mesh).geometry}
        material={materials.Letters}
        position={[0.36, 0.022, -0.664]}
        rotation={[0, -Math.PI / 6, 0]}
        scale={[0.053, 0.058, 0.058]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={(nodes.IndicatorClassic as Mesh).geometry}
        material={materials.Letters}
        position={[-0.011, 0.022, -0.76]}
        scale={[0.053, 0.058, 0.058]}
      />
    </group>
  );
}

useGLTF.preload("/models/OrientWatchClassicIndicators.glb");
